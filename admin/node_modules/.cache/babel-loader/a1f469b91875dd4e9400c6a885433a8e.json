{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useIsFocusVisible as useIsFocusVisible } from '@mui/utils';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nimport { useRootElementName } from '../utils/useRootElementName';\n/**\n *\n * Demos:\n *\n * - [Button](https://mui.com/base-ui/react-button/#hook)\n *\n * API:\n *\n * - [useButton API](https://mui.com/base-ui/react-button/hooks-api/#use-button)\n */\n\nexport function useButton() {\n  let parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    disabled = false,\n    focusableWhenDisabled,\n    href,\n    rootRef: externalRef,\n    tabIndex,\n    to,\n    type,\n    rootElementName: rootElementNameProp\n  } = parameters;\n  const buttonRef = React.useRef();\n  const [active, setActive] = React.useState(false);\n  const {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n\n  if (disabled && !focusableWhenDisabled && focusVisible) {\n    setFocusVisible(false);\n  }\n\n  React.useEffect(() => {\n    isFocusVisibleRef.current = focusVisible;\n  }, [focusVisible, isFocusVisibleRef]);\n  const [rootElementName, updateRootElementName] = useRootElementName({\n    rootElementName: rootElementNameProp != null ? rootElementNameProp : href || to ? 'a' : undefined,\n    componentName: 'Button'\n  });\n\n  const createHandleMouseLeave = otherHandlers => event => {\n    var _otherHandlers$onMous;\n\n    if (focusVisible) {\n      event.preventDefault();\n    }\n\n    (_otherHandlers$onMous = otherHandlers.onMouseLeave) == null || _otherHandlers$onMous.call(otherHandlers, event);\n  };\n\n  const createHandleBlur = otherHandlers => event => {\n    var _otherHandlers$onBlur;\n\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    (_otherHandlers$onBlur = otherHandlers.onBlur) == null || _otherHandlers$onBlur.call(otherHandlers, event);\n  };\n\n  const createHandleFocus = otherHandlers => event => {\n    var _otherHandlers$onFocu2; // Fix for https://github.com/facebook/react/issues/7769\n\n\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      var _otherHandlers$onFocu;\n\n      setFocusVisible(true);\n      (_otherHandlers$onFocu = otherHandlers.onFocusVisible) == null || _otherHandlers$onFocu.call(otherHandlers, event);\n    }\n\n    (_otherHandlers$onFocu2 = otherHandlers.onFocus) == null || _otherHandlers$onFocu2.call(otherHandlers, event);\n  };\n\n  const isNativeButton = () => {\n    const button = buttonRef.current;\n    return rootElementName === 'BUTTON' || rootElementName === 'INPUT' && ['button', 'submit', 'reset'].includes(button == null ? void 0 : button.type) || rootElementName === 'A' && (button == null ? void 0 : button.href);\n  };\n\n  const createHandleClick = otherHandlers => event => {\n    if (!disabled) {\n      var _otherHandlers$onClic;\n\n      (_otherHandlers$onClic = otherHandlers.onClick) == null || _otherHandlers$onClic.call(otherHandlers, event);\n    }\n  };\n\n  const createHandleMouseDown = otherHandlers => event => {\n    var _otherHandlers$onMous2;\n\n    if (!disabled) {\n      setActive(true);\n      document.addEventListener('mouseup', () => {\n        setActive(false);\n      }, {\n        once: true\n      });\n    }\n\n    (_otherHandlers$onMous2 = otherHandlers.onMouseDown) == null || _otherHandlers$onMous2.call(otherHandlers, event);\n  };\n\n  const createHandleKeyDown = otherHandlers => event => {\n    var _otherHandlers$onKeyD;\n\n    (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null || _otherHandlers$onKeyD.call(otherHandlers, event);\n\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n\n    if (event.target === event.currentTarget && !isNativeButton() && event.key === ' ') {\n      event.preventDefault();\n    }\n\n    if (event.target === event.currentTarget && event.key === ' ' && !disabled) {\n      setActive(true);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (event.target === event.currentTarget && !isNativeButton() && event.key === 'Enter' && !disabled) {\n      var _otherHandlers$onClic2;\n\n      (_otherHandlers$onClic2 = otherHandlers.onClick) == null || _otherHandlers$onClic2.call(otherHandlers, event);\n      event.preventDefault();\n    }\n  };\n\n  const createHandleKeyUp = otherHandlers => event => {\n    var _otherHandlers$onKeyU; // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/p/sandbox/button-keyup-preventdefault-dn7f0\n\n\n    if (event.target === event.currentTarget) {\n      setActive(false);\n    }\n\n    (_otherHandlers$onKeyU = otherHandlers.onKeyUp) == null || _otherHandlers$onKeyU.call(otherHandlers, event); // Keyboard accessibility for non interactive elements\n\n    if (event.target === event.currentTarget && !isNativeButton() && !disabled && event.key === ' ' && !event.defaultMuiPrevented) {\n      var _otherHandlers$onClic3;\n\n      (_otherHandlers$onClic3 = otherHandlers.onClick) == null || _otherHandlers$onClic3.call(otherHandlers, event);\n    }\n  };\n\n  const handleRef = useForkRef(updateRootElementName, externalRef, focusVisibleRef, buttonRef);\n  const buttonProps = {};\n\n  if (tabIndex !== undefined) {\n    buttonProps.tabIndex = tabIndex;\n  }\n\n  if (rootElementName === 'BUTTON') {\n    buttonProps.type = type != null ? type : 'button';\n\n    if (focusableWhenDisabled) {\n      buttonProps['aria-disabled'] = disabled;\n    } else {\n      buttonProps.disabled = disabled;\n    }\n  } else if (rootElementName === 'INPUT') {\n    if (type && ['button', 'submit', 'reset'].includes(type)) {\n      if (focusableWhenDisabled) {\n        buttonProps['aria-disabled'] = disabled;\n      } else {\n        buttonProps.disabled = disabled;\n      }\n    }\n  } else if (rootElementName !== '') {\n    if (!href && !to) {\n      buttonProps.role = 'button';\n      buttonProps.tabIndex = tabIndex != null ? tabIndex : 0;\n    }\n\n    if (disabled) {\n      buttonProps['aria-disabled'] = disabled;\n      buttonProps.tabIndex = focusableWhenDisabled ? tabIndex != null ? tabIndex : 0 : -1;\n    }\n  }\n\n  const getRootProps = function () {\n    let externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    const externalEventHandlers = _extends({}, extractEventHandlers(parameters), extractEventHandlers(externalProps));\n\n    const props = _extends({\n      type\n    }, externalEventHandlers, buttonProps, externalProps, {\n      onBlur: createHandleBlur(externalEventHandlers),\n      onClick: createHandleClick(externalEventHandlers),\n      onFocus: createHandleFocus(externalEventHandlers),\n      onKeyDown: createHandleKeyDown(externalEventHandlers),\n      onKeyUp: createHandleKeyUp(externalEventHandlers),\n      onMouseDown: createHandleMouseDown(externalEventHandlers),\n      onMouseLeave: createHandleMouseLeave(externalEventHandlers),\n      ref: handleRef\n    }); // onFocusVisible can be present on the props or parameters,\n    // but it's not a valid React event handler so it must not be forwarded to the inner component.\n    // If present, it will be handled by the focus handler.\n\n\n    delete props.onFocusVisible;\n    return props;\n  };\n\n  return {\n    getRootProps,\n    focusVisible,\n    setFocusVisible,\n    active,\n    rootRef: handleRef\n  };\n}","map":{"version":3,"sources":["C:/Users/daksh/Desktop/Booking/admin/node_modules/@mui/base/useButton/useButton.js"],"names":["_extends","React","unstable_useForkRef","useForkRef","unstable_useIsFocusVisible","useIsFocusVisible","extractEventHandlers","useRootElementName","useButton","parameters","disabled","focusableWhenDisabled","href","rootRef","externalRef","tabIndex","to","type","rootElementName","rootElementNameProp","buttonRef","useRef","active","setActive","useState","isFocusVisibleRef","onFocus","handleFocusVisible","onBlur","handleBlurVisible","ref","focusVisibleRef","focusVisible","setFocusVisible","useEffect","current","updateRootElementName","undefined","componentName","createHandleMouseLeave","otherHandlers","event","_otherHandlers$onMous","preventDefault","onMouseLeave","call","createHandleBlur","_otherHandlers$onBlur","createHandleFocus","_otherHandlers$onFocu2","currentTarget","_otherHandlers$onFocu","onFocusVisible","isNativeButton","button","includes","createHandleClick","_otherHandlers$onClic","onClick","createHandleMouseDown","_otherHandlers$onMous2","document","addEventListener","once","onMouseDown","createHandleKeyDown","_otherHandlers$onKeyD","onKeyDown","defaultMuiPrevented","target","key","_otherHandlers$onClic2","createHandleKeyUp","_otherHandlers$onKeyU","onKeyUp","_otherHandlers$onClic3","handleRef","buttonProps","role","getRootProps","externalProps","externalEventHandlers","props"],"mappings":"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","sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useIsFocusVisible as useIsFocusVisible } from '@mui/utils';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nimport { useRootElementName } from '../utils/useRootElementName';\n/**\n *\n * Demos:\n *\n * - [Button](https://mui.com/base-ui/react-button/#hook)\n *\n * API:\n *\n * - [useButton API](https://mui.com/base-ui/react-button/hooks-api/#use-button)\n */\nexport function useButton(parameters = {}) {\n  const {\n    disabled = false,\n    focusableWhenDisabled,\n    href,\n    rootRef: externalRef,\n    tabIndex,\n    to,\n    type,\n    rootElementName: rootElementNameProp\n  } = parameters;\n  const buttonRef = React.useRef();\n  const [active, setActive] = React.useState(false);\n  const {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  if (disabled && !focusableWhenDisabled && focusVisible) {\n    setFocusVisible(false);\n  }\n  React.useEffect(() => {\n    isFocusVisibleRef.current = focusVisible;\n  }, [focusVisible, isFocusVisibleRef]);\n  const [rootElementName, updateRootElementName] = useRootElementName({\n    rootElementName: rootElementNameProp != null ? rootElementNameProp : href || to ? 'a' : undefined,\n    componentName: 'Button'\n  });\n  const createHandleMouseLeave = otherHandlers => event => {\n    var _otherHandlers$onMous;\n    if (focusVisible) {\n      event.preventDefault();\n    }\n    (_otherHandlers$onMous = otherHandlers.onMouseLeave) == null || _otherHandlers$onMous.call(otherHandlers, event);\n  };\n  const createHandleBlur = otherHandlers => event => {\n    var _otherHandlers$onBlur;\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    (_otherHandlers$onBlur = otherHandlers.onBlur) == null || _otherHandlers$onBlur.call(otherHandlers, event);\n  };\n  const createHandleFocus = otherHandlers => event => {\n    var _otherHandlers$onFocu2;\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      var _otherHandlers$onFocu;\n      setFocusVisible(true);\n      (_otherHandlers$onFocu = otherHandlers.onFocusVisible) == null || _otherHandlers$onFocu.call(otherHandlers, event);\n    }\n    (_otherHandlers$onFocu2 = otherHandlers.onFocus) == null || _otherHandlers$onFocu2.call(otherHandlers, event);\n  };\n  const isNativeButton = () => {\n    const button = buttonRef.current;\n    return rootElementName === 'BUTTON' || rootElementName === 'INPUT' && ['button', 'submit', 'reset'].includes(button == null ? void 0 : button.type) || rootElementName === 'A' && (button == null ? void 0 : button.href);\n  };\n  const createHandleClick = otherHandlers => event => {\n    if (!disabled) {\n      var _otherHandlers$onClic;\n      (_otherHandlers$onClic = otherHandlers.onClick) == null || _otherHandlers$onClic.call(otherHandlers, event);\n    }\n  };\n  const createHandleMouseDown = otherHandlers => event => {\n    var _otherHandlers$onMous2;\n    if (!disabled) {\n      setActive(true);\n      document.addEventListener('mouseup', () => {\n        setActive(false);\n      }, {\n        once: true\n      });\n    }\n    (_otherHandlers$onMous2 = otherHandlers.onMouseDown) == null || _otherHandlers$onMous2.call(otherHandlers, event);\n  };\n  const createHandleKeyDown = otherHandlers => event => {\n    var _otherHandlers$onKeyD;\n    (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null || _otherHandlers$onKeyD.call(otherHandlers, event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (event.target === event.currentTarget && !isNativeButton() && event.key === ' ') {\n      event.preventDefault();\n    }\n    if (event.target === event.currentTarget && event.key === ' ' && !disabled) {\n      setActive(true);\n    }\n\n    // Keyboard accessibility for non interactive elements\n    if (event.target === event.currentTarget && !isNativeButton() && event.key === 'Enter' && !disabled) {\n      var _otherHandlers$onClic2;\n      (_otherHandlers$onClic2 = otherHandlers.onClick) == null || _otherHandlers$onClic2.call(otherHandlers, event);\n      event.preventDefault();\n    }\n  };\n  const createHandleKeyUp = otherHandlers => event => {\n    var _otherHandlers$onKeyU;\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/p/sandbox/button-keyup-preventdefault-dn7f0\n\n    if (event.target === event.currentTarget) {\n      setActive(false);\n    }\n    (_otherHandlers$onKeyU = otherHandlers.onKeyUp) == null || _otherHandlers$onKeyU.call(otherHandlers, event);\n\n    // Keyboard accessibility for non interactive elements\n    if (event.target === event.currentTarget && !isNativeButton() && !disabled && event.key === ' ' && !event.defaultMuiPrevented) {\n      var _otherHandlers$onClic3;\n      (_otherHandlers$onClic3 = otherHandlers.onClick) == null || _otherHandlers$onClic3.call(otherHandlers, event);\n    }\n  };\n  const handleRef = useForkRef(updateRootElementName, externalRef, focusVisibleRef, buttonRef);\n  const buttonProps = {};\n  if (tabIndex !== undefined) {\n    buttonProps.tabIndex = tabIndex;\n  }\n  if (rootElementName === 'BUTTON') {\n    buttonProps.type = type != null ? type : 'button';\n    if (focusableWhenDisabled) {\n      buttonProps['aria-disabled'] = disabled;\n    } else {\n      buttonProps.disabled = disabled;\n    }\n  } else if (rootElementName === 'INPUT') {\n    if (type && ['button', 'submit', 'reset'].includes(type)) {\n      if (focusableWhenDisabled) {\n        buttonProps['aria-disabled'] = disabled;\n      } else {\n        buttonProps.disabled = disabled;\n      }\n    }\n  } else if (rootElementName !== '') {\n    if (!href && !to) {\n      buttonProps.role = 'button';\n      buttonProps.tabIndex = tabIndex != null ? tabIndex : 0;\n    }\n    if (disabled) {\n      buttonProps['aria-disabled'] = disabled;\n      buttonProps.tabIndex = focusableWhenDisabled ? tabIndex != null ? tabIndex : 0 : -1;\n    }\n  }\n  const getRootProps = (externalProps = {}) => {\n    const externalEventHandlers = _extends({}, extractEventHandlers(parameters), extractEventHandlers(externalProps));\n    const props = _extends({\n      type\n    }, externalEventHandlers, buttonProps, externalProps, {\n      onBlur: createHandleBlur(externalEventHandlers),\n      onClick: createHandleClick(externalEventHandlers),\n      onFocus: createHandleFocus(externalEventHandlers),\n      onKeyDown: createHandleKeyDown(externalEventHandlers),\n      onKeyUp: createHandleKeyUp(externalEventHandlers),\n      onMouseDown: createHandleMouseDown(externalEventHandlers),\n      onMouseLeave: createHandleMouseLeave(externalEventHandlers),\n      ref: handleRef\n    });\n\n    // onFocusVisible can be present on the props or parameters,\n    // but it's not a valid React event handler so it must not be forwarded to the inner component.\n    // If present, it will be handled by the focus handler.\n    delete props.onFocusVisible;\n    return props;\n  };\n  return {\n    getRootProps,\n    focusVisible,\n    setFocusVisible,\n    active,\n    rootRef: handleRef\n  };\n}"]},"metadata":{},"sourceType":"module"}