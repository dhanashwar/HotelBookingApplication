{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n\n  if (null != t) {\n    var e,\n        n,\n        i,\n        u,\n        a = [],\n        f = !0,\n        o = !1;\n\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n\n    return a;\n  }\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nimport { warn } from './util';\nvar ACCURACY = 1e-4;\n\nvar cubicBezierFactor = function cubicBezierFactor(c1, c2) {\n  return [0, 3 * c1, 3 * c2 - 6 * c1, 3 * c1 - 3 * c2 + 1];\n};\n\nvar multyTime = function multyTime(params, t) {\n  return params.map(function (param, i) {\n    return param * Math.pow(t, i);\n  }).reduce(function (pre, curr) {\n    return pre + curr;\n  });\n};\n\nvar cubicBezier = function cubicBezier(c1, c2) {\n  return function (t) {\n    var params = cubicBezierFactor(c1, c2);\n    return multyTime(params, t);\n  };\n};\n\nvar derivativeCubicBezier = function derivativeCubicBezier(c1, c2) {\n  return function (t) {\n    var params = cubicBezierFactor(c1, c2);\n    var newParams = [].concat(_toConsumableArray(params.map(function (param, i) {\n      return param * i;\n    }).slice(1)), [0]);\n    return multyTime(newParams, t);\n  };\n}; // calculate cubic-bezier using Newton's method\n\n\nexport var configBezier = function configBezier() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var x1 = args[0],\n      y1 = args[1],\n      x2 = args[2],\n      y2 = args[3];\n\n  if (args.length === 1) {\n    switch (args[0]) {\n      case 'linear':\n        x1 = 0.0;\n        y1 = 0.0;\n        x2 = 1.0;\n        y2 = 1.0;\n        break;\n\n      case 'ease':\n        x1 = 0.25;\n        y1 = 0.1;\n        x2 = 0.25;\n        y2 = 1.0;\n        break;\n\n      case 'ease-in':\n        x1 = 0.42;\n        y1 = 0.0;\n        x2 = 1.0;\n        y2 = 1.0;\n        break;\n\n      case 'ease-out':\n        x1 = 0.42;\n        y1 = 0.0;\n        x2 = 0.58;\n        y2 = 1.0;\n        break;\n\n      case 'ease-in-out':\n        x1 = 0.0;\n        y1 = 0.0;\n        x2 = 0.58;\n        y2 = 1.0;\n        break;\n\n      default:\n        {\n          var easing = args[0].split('(');\n\n          if (easing[0] === 'cubic-bezier' && easing[1].split(')')[0].split(',').length === 4) {\n            var _easing$1$split$0$spl = easing[1].split(')')[0].split(',').map(function (x) {\n              return parseFloat(x);\n            });\n\n            var _easing$1$split$0$spl2 = _slicedToArray(_easing$1$split$0$spl, 4);\n\n            x1 = _easing$1$split$0$spl2[0];\n            y1 = _easing$1$split$0$spl2[1];\n            x2 = _easing$1$split$0$spl2[2];\n            y2 = _easing$1$split$0$spl2[3];\n          } else {\n            warn(false, '[configBezier]: arguments should be one of ' + \"oneOf 'linear', 'ease', 'ease-in', 'ease-out', \" + \"'ease-in-out','cubic-bezier(x1,y1,x2,y2)', instead received %s\", args);\n          }\n        }\n    }\n  }\n\n  warn([x1, x2, y1, y2].every(function (num) {\n    return typeof num === 'number' && num >= 0 && num <= 1;\n  }), '[configBezier]: arguments should be x1, y1, x2, y2 of [0, 1] instead received %s', args);\n  var curveX = cubicBezier(x1, x2);\n  var curveY = cubicBezier(y1, y2);\n  var derCurveX = derivativeCubicBezier(x1, x2);\n\n  var rangeValue = function rangeValue(value) {\n    if (value > 1) {\n      return 1;\n    }\n\n    if (value < 0) {\n      return 0;\n    }\n\n    return value;\n  };\n\n  var bezier = function bezier(_t) {\n    var t = _t > 1 ? 1 : _t;\n    var x = t;\n\n    for (var i = 0; i < 8; ++i) {\n      var evalT = curveX(x) - t;\n      var derVal = derCurveX(x);\n\n      if (Math.abs(evalT - t) < ACCURACY || derVal < ACCURACY) {\n        return curveY(x);\n      }\n\n      x = rangeValue(x - evalT / derVal);\n    }\n\n    return curveY(x);\n  };\n\n  bezier.isStepper = false;\n  return bezier;\n};\nexport var configSpring = function configSpring() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$stiff = config.stiff,\n      stiff = _config$stiff === void 0 ? 100 : _config$stiff,\n      _config$damping = config.damping,\n      damping = _config$damping === void 0 ? 8 : _config$damping,\n      _config$dt = config.dt,\n      dt = _config$dt === void 0 ? 17 : _config$dt;\n\n  var stepper = function stepper(currX, destX, currV) {\n    var FSpring = -(currX - destX) * stiff;\n    var FDamping = currV * damping;\n    var newV = currV + (FSpring - FDamping) * dt / 1000;\n    var newX = currV * dt / 1000 + currX;\n\n    if (Math.abs(newX - destX) < ACCURACY && Math.abs(newV) < ACCURACY) {\n      return [destX, 0];\n    }\n\n    return [newX, newV];\n  };\n\n  stepper.isStepper = true;\n  stepper.dt = dt;\n  return stepper;\n};\nexport var configEasing = function configEasing() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  var easing = args[0];\n\n  if (typeof easing === 'string') {\n    switch (easing) {\n      case 'ease':\n      case 'ease-in-out':\n      case 'ease-out':\n      case 'ease-in':\n      case 'linear':\n        return configBezier(easing);\n\n      case 'spring':\n        return configSpring();\n\n      default:\n        if (easing.split('(')[0] === 'cubic-bezier') {\n          return configBezier(easing);\n        }\n\n        warn(false, \"[configEasing]: first argument should be one of 'ease', 'ease-in', \" + \"'ease-out', 'ease-in-out','cubic-bezier(x1,y1,x2,y2)', 'linear' and 'spring', instead  received %s\", args);\n    }\n  }\n\n  if (typeof easing === 'function') {\n    return easing;\n  }\n\n  warn(false, '[configEasing]: first argument type should be function or string, instead received %s', args);\n  return null;\n};","map":{"version":3,"sources":["C:/Users/daksh/Desktop/Booking/admin/node_modules/react-smooth/es6/easing.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","r","l","t","Symbol","iterator","e","n","u","a","f","o","call","next","Object","done","push","value","length","return","Array","isArray","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","prototype","toString","slice","constructor","name","from","test","iter","len","arr2","warn","ACCURACY","cubicBezierFactor","c1","c2","multyTime","params","map","param","Math","pow","reduce","pre","curr","cubicBezier","derivativeCubicBezier","newParams","concat","configBezier","_len","arguments","args","_key","x1","y1","x2","y2","easing","split","_easing$1$split$0$spl","x","parseFloat","_easing$1$split$0$spl2","every","num","curveX","curveY","derCurveX","rangeValue","bezier","_t","evalT","derVal","abs","isStepper","configSpring","config","undefined","_config$stiff","stiff","_config$damping","damping","_config$dt","dt","stepper","currX","destX","currV","FSpring","FDamping","newV","newX","configEasing","_len2","_key2"],"mappings":"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","sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport { warn } from './util';\nvar ACCURACY = 1e-4;\nvar cubicBezierFactor = function cubicBezierFactor(c1, c2) {\n  return [0, 3 * c1, 3 * c2 - 6 * c1, 3 * c1 - 3 * c2 + 1];\n};\nvar multyTime = function multyTime(params, t) {\n  return params.map(function (param, i) {\n    return param * Math.pow(t, i);\n  }).reduce(function (pre, curr) {\n    return pre + curr;\n  });\n};\nvar cubicBezier = function cubicBezier(c1, c2) {\n  return function (t) {\n    var params = cubicBezierFactor(c1, c2);\n    return multyTime(params, t);\n  };\n};\nvar derivativeCubicBezier = function derivativeCubicBezier(c1, c2) {\n  return function (t) {\n    var params = cubicBezierFactor(c1, c2);\n    var newParams = [].concat(_toConsumableArray(params.map(function (param, i) {\n      return param * i;\n    }).slice(1)), [0]);\n    return multyTime(newParams, t);\n  };\n};\n\n// calculate cubic-bezier using Newton's method\nexport var configBezier = function configBezier() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  var x1 = args[0],\n    y1 = args[1],\n    x2 = args[2],\n    y2 = args[3];\n  if (args.length === 1) {\n    switch (args[0]) {\n      case 'linear':\n        x1 = 0.0;\n        y1 = 0.0;\n        x2 = 1.0;\n        y2 = 1.0;\n        break;\n      case 'ease':\n        x1 = 0.25;\n        y1 = 0.1;\n        x2 = 0.25;\n        y2 = 1.0;\n        break;\n      case 'ease-in':\n        x1 = 0.42;\n        y1 = 0.0;\n        x2 = 1.0;\n        y2 = 1.0;\n        break;\n      case 'ease-out':\n        x1 = 0.42;\n        y1 = 0.0;\n        x2 = 0.58;\n        y2 = 1.0;\n        break;\n      case 'ease-in-out':\n        x1 = 0.0;\n        y1 = 0.0;\n        x2 = 0.58;\n        y2 = 1.0;\n        break;\n      default:\n        {\n          var easing = args[0].split('(');\n          if (easing[0] === 'cubic-bezier' && easing[1].split(')')[0].split(',').length === 4) {\n            var _easing$1$split$0$spl = easing[1].split(')')[0].split(',').map(function (x) {\n              return parseFloat(x);\n            });\n            var _easing$1$split$0$spl2 = _slicedToArray(_easing$1$split$0$spl, 4);\n            x1 = _easing$1$split$0$spl2[0];\n            y1 = _easing$1$split$0$spl2[1];\n            x2 = _easing$1$split$0$spl2[2];\n            y2 = _easing$1$split$0$spl2[3];\n          } else {\n            warn(false, '[configBezier]: arguments should be one of ' + \"oneOf 'linear', 'ease', 'ease-in', 'ease-out', \" + \"'ease-in-out','cubic-bezier(x1,y1,x2,y2)', instead received %s\", args);\n          }\n        }\n    }\n  }\n  warn([x1, x2, y1, y2].every(function (num) {\n    return typeof num === 'number' && num >= 0 && num <= 1;\n  }), '[configBezier]: arguments should be x1, y1, x2, y2 of [0, 1] instead received %s', args);\n  var curveX = cubicBezier(x1, x2);\n  var curveY = cubicBezier(y1, y2);\n  var derCurveX = derivativeCubicBezier(x1, x2);\n  var rangeValue = function rangeValue(value) {\n    if (value > 1) {\n      return 1;\n    }\n    if (value < 0) {\n      return 0;\n    }\n    return value;\n  };\n  var bezier = function bezier(_t) {\n    var t = _t > 1 ? 1 : _t;\n    var x = t;\n    for (var i = 0; i < 8; ++i) {\n      var evalT = curveX(x) - t;\n      var derVal = derCurveX(x);\n      if (Math.abs(evalT - t) < ACCURACY || derVal < ACCURACY) {\n        return curveY(x);\n      }\n      x = rangeValue(x - evalT / derVal);\n    }\n    return curveY(x);\n  };\n  bezier.isStepper = false;\n  return bezier;\n};\nexport var configSpring = function configSpring() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$stiff = config.stiff,\n    stiff = _config$stiff === void 0 ? 100 : _config$stiff,\n    _config$damping = config.damping,\n    damping = _config$damping === void 0 ? 8 : _config$damping,\n    _config$dt = config.dt,\n    dt = _config$dt === void 0 ? 17 : _config$dt;\n  var stepper = function stepper(currX, destX, currV) {\n    var FSpring = -(currX - destX) * stiff;\n    var FDamping = currV * damping;\n    var newV = currV + (FSpring - FDamping) * dt / 1000;\n    var newX = currV * dt / 1000 + currX;\n    if (Math.abs(newX - destX) < ACCURACY && Math.abs(newV) < ACCURACY) {\n      return [destX, 0];\n    }\n    return [newX, newV];\n  };\n  stepper.isStepper = true;\n  stepper.dt = dt;\n  return stepper;\n};\nexport var configEasing = function configEasing() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n  var easing = args[0];\n  if (typeof easing === 'string') {\n    switch (easing) {\n      case 'ease':\n      case 'ease-in-out':\n      case 'ease-out':\n      case 'ease-in':\n      case 'linear':\n        return configBezier(easing);\n      case 'spring':\n        return configSpring();\n      default:\n        if (easing.split('(')[0] === 'cubic-bezier') {\n          return configBezier(easing);\n        }\n        warn(false, \"[configEasing]: first argument should be one of 'ease', 'ease-in', \" + \"'ease-out', 'ease-in-out','cubic-bezier(x1,y1,x2,y2)', 'linear' and 'spring', instead  received %s\", args);\n    }\n  }\n  if (typeof easing === 'function') {\n    return easing;\n  }\n  warn(false, '[configEasing]: first argument type should be function or string, instead received %s', args);\n  return null;\n};"]},"metadata":{},"sourceType":"module"}