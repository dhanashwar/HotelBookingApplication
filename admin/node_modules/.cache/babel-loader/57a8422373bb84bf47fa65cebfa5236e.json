{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"backIconButtonProps\", \"count\", \"disabled\", \"getItemAriaLabel\", \"nextIconButtonProps\", \"onPageChange\", \"page\", \"rowsPerPage\", \"showFirstButton\", \"showLastButton\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport IconButton from '../IconButton';\nimport LastPageIconDefault from '../internal/svg-icons/LastPage';\nimport FirstPageIconDefault from '../internal/svg-icons/FirstPage';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var _slots$firstButton, _slots$lastButton, _slots$nextButton, _slots$previousButton, _slots$firstButtonIco, _slots$lastButtonIcon, _slots$nextButtonIcon, _slots$previousButton2;\n\n  const {\n    backIconButtonProps,\n    count,\n    disabled = false,\n    getItemAriaLabel,\n    nextIconButtonProps,\n    onPageChange,\n    page,\n    rowsPerPage,\n    showFirstButton,\n    showLastButton,\n    slots = {},\n    slotProps = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const isRtl = useRtl();\n\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  const FirstButton = (_slots$firstButton = slots.firstButton) != null ? _slots$firstButton : IconButton;\n  const LastButton = (_slots$lastButton = slots.lastButton) != null ? _slots$lastButton : IconButton;\n  const NextButton = (_slots$nextButton = slots.nextButton) != null ? _slots$nextButton : IconButton;\n  const PreviousButton = (_slots$previousButton = slots.previousButton) != null ? _slots$previousButton : IconButton;\n  const FirstButtonIcon = (_slots$firstButtonIco = slots.firstButtonIcon) != null ? _slots$firstButtonIco : FirstPageIconDefault;\n  const LastButtonIcon = (_slots$lastButtonIcon = slots.lastButtonIcon) != null ? _slots$lastButtonIcon : LastPageIconDefault;\n  const NextButtonIcon = (_slots$nextButtonIcon = slots.nextButtonIcon) != null ? _slots$nextButtonIcon : KeyboardArrowRight;\n  const PreviousButtonIcon = (_slots$previousButton2 = slots.previousButtonIcon) != null ? _slots$previousButton2 : KeyboardArrowLeft;\n  const FirstButtonSlot = isRtl ? LastButton : FirstButton;\n  const PreviousButtonSlot = isRtl ? NextButton : PreviousButton;\n  const NextButtonSlot = isRtl ? PreviousButton : NextButton;\n  const LastButtonSlot = isRtl ? FirstButton : LastButton;\n  const firstButtonSlotProps = isRtl ? slotProps.lastButton : slotProps.firstButton;\n  const previousButtonSlotProps = isRtl ? slotProps.nextButton : slotProps.previousButton;\n  const nextButtonSlotProps = isRtl ? slotProps.previousButton : slotProps.nextButton;\n  const lastButtonSlotProps = isRtl ? slotProps.firstButton : slotProps.lastButton;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref\n  }, other, {\n    children: [showFirstButton && /*#__PURE__*/_jsx(FirstButtonSlot, _extends({\n      onClick: handleFirstPageButtonClick,\n      disabled: disabled || page === 0,\n      \"aria-label\": getItemAriaLabel('first', page),\n      title: getItemAriaLabel('first', page)\n    }, firstButtonSlotProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(LastButtonIcon, _extends({}, slotProps.lastButtonIcon)) : /*#__PURE__*/_jsx(FirstButtonIcon, _extends({}, slotProps.firstButtonIcon))\n    })), /*#__PURE__*/_jsx(PreviousButtonSlot, _extends({\n      onClick: handleBackButtonClick,\n      disabled: disabled || page === 0,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('previous', page),\n      title: getItemAriaLabel('previous', page)\n    }, previousButtonSlotProps != null ? previousButtonSlotProps : backIconButtonProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(NextButtonIcon, _extends({}, slotProps.nextButtonIcon)) : /*#__PURE__*/_jsx(PreviousButtonIcon, _extends({}, slotProps.previousButtonIcon))\n    })), /*#__PURE__*/_jsx(NextButtonSlot, _extends({\n      onClick: handleNextButtonClick,\n      disabled: disabled || (count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false),\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('next', page),\n      title: getItemAriaLabel('next', page)\n    }, nextButtonSlotProps != null ? nextButtonSlotProps : nextIconButtonProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(PreviousButtonIcon, _extends({}, slotProps.previousButtonIcon)) : /*#__PURE__*/_jsx(NextButtonIcon, _extends({}, slotProps.nextButtonIcon))\n    })), showLastButton && /*#__PURE__*/_jsx(LastButtonSlot, _extends({\n      onClick: handleLastPageButtonClick,\n      disabled: disabled || page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": getItemAriaLabel('last', page),\n      title: getItemAriaLabel('last', page)\n    }, lastButtonSlotProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(FirstButtonIcon, _extends({}, slotProps.firstButtonIcon)) : /*#__PURE__*/_jsx(LastButtonIcon, _extends({}, slotProps.lastButtonIcon))\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * If `true`, show the first-page button.\n   */\n  showFirstButton: PropTypes.bool.isRequired,\n\n  /**\n   * If `true`, show the last-page button.\n   */\n  showLastButton: PropTypes.bool.isRequired,\n\n  /**\n   * The props used for each slot inside the TablePaginationActions.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    firstButton: PropTypes.object,\n    firstButtonIcon: PropTypes.object,\n    lastButton: PropTypes.object,\n    lastButtonIcon: PropTypes.object,\n    nextButton: PropTypes.object,\n    nextButtonIcon: PropTypes.object,\n    previousButton: PropTypes.object,\n    previousButtonIcon: PropTypes.object\n  }),\n\n  /**\n   * The components used for each slot inside the TablePaginationActions.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    firstButton: PropTypes.elementType,\n    firstButtonIcon: PropTypes.elementType,\n    lastButton: PropTypes.elementType,\n    lastButtonIcon: PropTypes.elementType,\n    nextButton: PropTypes.elementType,\n    nextButtonIcon: PropTypes.elementType,\n    previousButton: PropTypes.elementType,\n    previousButtonIcon: PropTypes.elementType\n  })\n} : void 0;\nexport default TablePaginationActions;","map":{"version":3,"sources":["C:/Users/daksh/Desktop/Booking/admin/node_modules/@mui/material/TablePagination/TablePaginationActions.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","useRtl","KeyboardArrowLeft","KeyboardArrowRight","IconButton","LastPageIconDefault","FirstPageIconDefault","jsx","_jsx","jsxs","_jsxs","TablePaginationActions","forwardRef","props","ref","_slots$firstButton","_slots$lastButton","_slots$nextButton","_slots$previousButton","_slots$firstButtonIco","_slots$lastButtonIcon","_slots$nextButtonIcon","_slots$previousButton2","backIconButtonProps","count","disabled","getItemAriaLabel","nextIconButtonProps","onPageChange","page","rowsPerPage","showFirstButton","showLastButton","slots","slotProps","other","isRtl","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","FirstButton","firstButton","LastButton","lastButton","NextButton","nextButton","PreviousButton","previousButton","FirstButtonIcon","firstButtonIcon","LastButtonIcon","lastButtonIcon","NextButtonIcon","nextButtonIcon","PreviousButtonIcon","previousButtonIcon","FirstButtonSlot","PreviousButtonSlot","NextButtonSlot","LastButtonSlot","firstButtonSlotProps","previousButtonSlotProps","nextButtonSlotProps","lastButtonSlotProps","children","onClick","title","color","process","env","NODE_ENV","propTypes","object","number","isRequired","bool","func","shape","elementType"],"mappings":"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","sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"backIconButtonProps\", \"count\", \"disabled\", \"getItemAriaLabel\", \"nextIconButtonProps\", \"onPageChange\", \"page\", \"rowsPerPage\", \"showFirstButton\", \"showLastButton\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport IconButton from '../IconButton';\nimport LastPageIconDefault from '../internal/svg-icons/LastPage';\nimport FirstPageIconDefault from '../internal/svg-icons/FirstPage';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var _slots$firstButton, _slots$lastButton, _slots$nextButton, _slots$previousButton, _slots$firstButtonIco, _slots$lastButtonIcon, _slots$nextButtonIcon, _slots$previousButton2;\n  const {\n      backIconButtonProps,\n      count,\n      disabled = false,\n      getItemAriaLabel,\n      nextIconButtonProps,\n      onPageChange,\n      page,\n      rowsPerPage,\n      showFirstButton,\n      showLastButton,\n      slots = {},\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isRtl = useRtl();\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  const FirstButton = (_slots$firstButton = slots.firstButton) != null ? _slots$firstButton : IconButton;\n  const LastButton = (_slots$lastButton = slots.lastButton) != null ? _slots$lastButton : IconButton;\n  const NextButton = (_slots$nextButton = slots.nextButton) != null ? _slots$nextButton : IconButton;\n  const PreviousButton = (_slots$previousButton = slots.previousButton) != null ? _slots$previousButton : IconButton;\n  const FirstButtonIcon = (_slots$firstButtonIco = slots.firstButtonIcon) != null ? _slots$firstButtonIco : FirstPageIconDefault;\n  const LastButtonIcon = (_slots$lastButtonIcon = slots.lastButtonIcon) != null ? _slots$lastButtonIcon : LastPageIconDefault;\n  const NextButtonIcon = (_slots$nextButtonIcon = slots.nextButtonIcon) != null ? _slots$nextButtonIcon : KeyboardArrowRight;\n  const PreviousButtonIcon = (_slots$previousButton2 = slots.previousButtonIcon) != null ? _slots$previousButton2 : KeyboardArrowLeft;\n  const FirstButtonSlot = isRtl ? LastButton : FirstButton;\n  const PreviousButtonSlot = isRtl ? NextButton : PreviousButton;\n  const NextButtonSlot = isRtl ? PreviousButton : NextButton;\n  const LastButtonSlot = isRtl ? FirstButton : LastButton;\n  const firstButtonSlotProps = isRtl ? slotProps.lastButton : slotProps.firstButton;\n  const previousButtonSlotProps = isRtl ? slotProps.nextButton : slotProps.previousButton;\n  const nextButtonSlotProps = isRtl ? slotProps.previousButton : slotProps.nextButton;\n  const lastButtonSlotProps = isRtl ? slotProps.firstButton : slotProps.lastButton;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref\n  }, other, {\n    children: [showFirstButton && /*#__PURE__*/_jsx(FirstButtonSlot, _extends({\n      onClick: handleFirstPageButtonClick,\n      disabled: disabled || page === 0,\n      \"aria-label\": getItemAriaLabel('first', page),\n      title: getItemAriaLabel('first', page)\n    }, firstButtonSlotProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(LastButtonIcon, _extends({}, slotProps.lastButtonIcon)) : /*#__PURE__*/_jsx(FirstButtonIcon, _extends({}, slotProps.firstButtonIcon))\n    })), /*#__PURE__*/_jsx(PreviousButtonSlot, _extends({\n      onClick: handleBackButtonClick,\n      disabled: disabled || page === 0,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('previous', page),\n      title: getItemAriaLabel('previous', page)\n    }, previousButtonSlotProps != null ? previousButtonSlotProps : backIconButtonProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(NextButtonIcon, _extends({}, slotProps.nextButtonIcon)) : /*#__PURE__*/_jsx(PreviousButtonIcon, _extends({}, slotProps.previousButtonIcon))\n    })), /*#__PURE__*/_jsx(NextButtonSlot, _extends({\n      onClick: handleNextButtonClick,\n      disabled: disabled || (count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false),\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('next', page),\n      title: getItemAriaLabel('next', page)\n    }, nextButtonSlotProps != null ? nextButtonSlotProps : nextIconButtonProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(PreviousButtonIcon, _extends({}, slotProps.previousButtonIcon)) : /*#__PURE__*/_jsx(NextButtonIcon, _extends({}, slotProps.nextButtonIcon))\n    })), showLastButton && /*#__PURE__*/_jsx(LastButtonSlot, _extends({\n      onClick: handleLastPageButtonClick,\n      disabled: disabled || page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": getItemAriaLabel('last', page),\n      title: getItemAriaLabel('last', page)\n    }, lastButtonSlotProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(FirstButtonIcon, _extends({}, slotProps.firstButtonIcon)) : /*#__PURE__*/_jsx(LastButtonIcon, _extends({}, slotProps.lastButtonIcon))\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func.isRequired,\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n  /**\n   * If `true`, show the first-page button.\n   */\n  showFirstButton: PropTypes.bool.isRequired,\n  /**\n   * If `true`, show the last-page button.\n   */\n  showLastButton: PropTypes.bool.isRequired,\n  /**\n   * The props used for each slot inside the TablePaginationActions.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    firstButton: PropTypes.object,\n    firstButtonIcon: PropTypes.object,\n    lastButton: PropTypes.object,\n    lastButtonIcon: PropTypes.object,\n    nextButton: PropTypes.object,\n    nextButtonIcon: PropTypes.object,\n    previousButton: PropTypes.object,\n    previousButtonIcon: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside the TablePaginationActions.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    firstButton: PropTypes.elementType,\n    firstButtonIcon: PropTypes.elementType,\n    lastButton: PropTypes.elementType,\n    lastButtonIcon: PropTypes.elementType,\n    nextButton: PropTypes.elementType,\n    nextButtonIcon: PropTypes.elementType,\n    previousButton: PropTypes.elementType,\n    previousButtonIcon: PropTypes.elementType\n  })\n} : void 0;\nexport default TablePaginationActions;"]},"metadata":{},"sourceType":"module"}