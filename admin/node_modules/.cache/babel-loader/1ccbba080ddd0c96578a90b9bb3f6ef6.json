{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"ownerState\"],\n      _excluded2 = [\"variants\"],\n      _excluded3 = [\"name\", \"slot\", \"skipVariantsResolver\", \"skipSx\", \"overridesResolver\"];\n/* eslint-disable no-underscore-dangle */\n\nimport styledEngineStyled, { internal_processStyles as processStyles } from '@mui/styled-engine';\nimport { isPlainObject } from '@mui/utils/deepmerge';\nimport capitalize from '@mui/utils/capitalize';\nimport getDisplayName from '@mui/utils/getDisplayName';\nimport createTheme from './createTheme';\nimport styleFunctionSx from './styleFunctionSx';\n\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n} // https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40\n\n\nfunction isStringTag(tag) {\n  return typeof tag === 'string' && // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96;\n} // Update /system/styled/#api in case if this changes\n\n\nexport function shouldForwardProp(prop) {\n  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n}\nexport const systemDefaultTheme = createTheme();\n\nconst lowercaseFirstLetter = string => {\n  if (!string) {\n    return string;\n  }\n\n  return string.charAt(0).toLowerCase() + string.slice(1);\n};\n\nfunction resolveTheme(_ref2) {\n  let {\n    defaultTheme,\n    theme,\n    themeId\n  } = _ref2;\n  return isEmpty(theme) ? defaultTheme : theme[themeId] || theme;\n}\n\nfunction defaultOverridesResolver(slot) {\n  if (!slot) {\n    return null;\n  }\n\n  return (props, styles) => styles[slot];\n}\n\nfunction processStyleArg(callableStyle, _ref) {\n  let {\n    ownerState\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const resolvedStylesArg = typeof callableStyle === 'function' ? callableStyle(_extends({\n    ownerState\n  }, props)) : callableStyle;\n\n  if (Array.isArray(resolvedStylesArg)) {\n    return resolvedStylesArg.flatMap(resolvedStyle => processStyleArg(resolvedStyle, _extends({\n      ownerState\n    }, props)));\n  }\n\n  if (!!resolvedStylesArg && typeof resolvedStylesArg === 'object' && Array.isArray(resolvedStylesArg.variants)) {\n    const {\n      variants = []\n    } = resolvedStylesArg,\n          otherStyles = _objectWithoutPropertiesLoose(resolvedStylesArg, _excluded2);\n\n    let result = otherStyles;\n    variants.forEach(variant => {\n      let isMatch = true;\n\n      if (typeof variant.props === 'function') {\n        isMatch = variant.props(_extends({\n          ownerState\n        }, props, ownerState));\n      } else {\n        Object.keys(variant.props).forEach(key => {\n          if ((ownerState == null ? void 0 : ownerState[key]) !== variant.props[key] && props[key] !== variant.props[key]) {\n            isMatch = false;\n          }\n        });\n      }\n\n      if (isMatch) {\n        if (!Array.isArray(result)) {\n          result = [result];\n        }\n\n        result.push(typeof variant.style === 'function' ? variant.style(_extends({\n          ownerState\n        }, props, ownerState)) : variant.style);\n      }\n    });\n    return result;\n  }\n\n  return resolvedStylesArg;\n}\n\nexport default function createStyled() {\n  let input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    themeId,\n    defaultTheme = systemDefaultTheme,\n    rootShouldForwardProp = shouldForwardProp,\n    slotShouldForwardProp = shouldForwardProp\n  } = input;\n\n  const systemSx = props => {\n    return styleFunctionSx(_extends({}, props, {\n      theme: resolveTheme(_extends({}, props, {\n        defaultTheme,\n        themeId\n      }))\n    }));\n  };\n\n  systemSx.__mui_systemSx = true;\n  return function (tag) {\n    let inputOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    // Filter out the `sx` style function from the previous styled component to prevent unnecessary styles generated by the composite components.\n    processStyles(tag, styles => styles.filter(style => !(style != null && style.__mui_systemSx)));\n\n    const {\n      name: componentName,\n      slot: componentSlot,\n      skipVariantsResolver: inputSkipVariantsResolver,\n      skipSx: inputSkipSx,\n      // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n      // For more details: https://github.com/mui/material-ui/pull/37908\n      overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot))\n    } = inputOptions,\n          options = _objectWithoutPropertiesLoose(inputOptions, _excluded3); // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\n\n\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver : // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;\n    const skipSx = inputSkipSx || false;\n    let label;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (componentName) {\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;\n      }\n    }\n\n    let shouldForwardPropOption = shouldForwardProp; // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n\n    if (componentSlot === 'Root' || componentSlot === 'root') {\n      shouldForwardPropOption = rootShouldForwardProp;\n    } else if (componentSlot) {\n      // any other slot specified\n      shouldForwardPropOption = slotShouldForwardProp;\n    } else if (isStringTag(tag)) {\n      // for string (html) tag, preserve the behavior in emotion & styled-components.\n      shouldForwardPropOption = undefined;\n    }\n\n    const defaultStyledResolver = styledEngineStyled(tag, _extends({\n      shouldForwardProp: shouldForwardPropOption,\n      label\n    }, options));\n\n    const transformStyleArg = stylesArg => {\n      // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n      // component stays as a function. This condition makes sure that we do not interpolate functions\n      // which are basically components used as a selectors.\n      if (typeof stylesArg === 'function' && stylesArg.__emotion_real !== stylesArg || isPlainObject(stylesArg)) {\n        return props => processStyleArg(stylesArg, _extends({}, props, {\n          theme: resolveTheme({\n            theme: props.theme,\n            defaultTheme,\n            themeId\n          })\n        }));\n      }\n\n      return stylesArg;\n    };\n\n    const muiStyledResolver = function (styleArg) {\n      let transformedStyleArg = transformStyleArg(styleArg);\n\n      for (var _len = arguments.length, expressions = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        expressions[_key - 1] = arguments[_key];\n      }\n\n      const expressionsWithDefaultTheme = expressions ? expressions.map(transformStyleArg) : [];\n\n      if (componentName && overridesResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }));\n\n          if (!theme.components || !theme.components[componentName] || !theme.components[componentName].styleOverrides) {\n            return null;\n          }\n\n          const styleOverrides = theme.components[componentName].styleOverrides;\n          const resolvedStyleOverrides = {}; // TODO: v7 remove iteration and use `resolveStyleArg(styleOverrides[slot])` directly\n\n          Object.entries(styleOverrides).forEach(_ref3 => {\n            let [slotKey, slotStyle] = _ref3;\n            resolvedStyleOverrides[slotKey] = processStyleArg(slotStyle, _extends({}, props, {\n              theme\n            }));\n          });\n          return overridesResolver(props, resolvedStyleOverrides);\n        });\n      }\n\n      if (componentName && !skipVariantsResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          var _theme$components;\n\n          const theme = resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          const themeVariants = theme == null || (_theme$components = theme.components) == null || (_theme$components = _theme$components[componentName]) == null ? void 0 : _theme$components.variants;\n          return processStyleArg({\n            variants: themeVariants\n          }, _extends({}, props, {\n            theme\n          }));\n        });\n      }\n\n      if (!skipSx) {\n        expressionsWithDefaultTheme.push(systemSx);\n      }\n\n      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;\n\n      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {\n        const placeholders = new Array(numOfCustomFnsApplied).fill(''); // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.\n\n        transformedStyleArg = [...styleArg, ...placeholders];\n        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];\n      }\n\n      const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);\n\n      if (process.env.NODE_ENV !== 'production') {\n        let displayName;\n\n        if (componentName) {\n          displayName = `${componentName}${capitalize(componentSlot || '')}`;\n        }\n\n        if (displayName === undefined) {\n          displayName = `Styled(${getDisplayName(tag)})`;\n        }\n\n        Component.displayName = displayName;\n      }\n\n      if (tag.muiName) {\n        Component.muiName = tag.muiName;\n      }\n\n      return Component;\n    };\n\n    if (defaultStyledResolver.withConfig) {\n      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;\n    }\n\n    return muiStyledResolver;\n  };\n}","map":{"version":3,"sources":["C:/Users/daksh/Desktop/Booking/admin/node_modules/@mui/system/esm/createStyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","_excluded3","styledEngineStyled","internal_processStyles","processStyles","isPlainObject","capitalize","getDisplayName","createTheme","styleFunctionSx","isEmpty","obj","Object","keys","length","isStringTag","tag","charCodeAt","shouldForwardProp","prop","systemDefaultTheme","lowercaseFirstLetter","string","charAt","toLowerCase","slice","resolveTheme","defaultTheme","theme","themeId","defaultOverridesResolver","slot","props","styles","processStyleArg","callableStyle","_ref","ownerState","resolvedStylesArg","Array","isArray","flatMap","resolvedStyle","variants","otherStyles","result","forEach","variant","isMatch","key","push","style","createStyled","input","rootShouldForwardProp","slotShouldForwardProp","systemSx","__mui_systemSx","inputOptions","filter","name","componentName","componentSlot","skipVariantsResolver","inputSkipVariantsResolver","skipSx","inputSkipSx","overridesResolver","options","undefined","label","process","env","NODE_ENV","shouldForwardPropOption","defaultStyledResolver","transformStyleArg","stylesArg","__emotion_real","muiStyledResolver","styleArg","transformedStyleArg","expressions","expressionsWithDefaultTheme","map","components","styleOverrides","resolvedStyleOverrides","entries","slotKey","slotStyle","_theme$components","themeVariants","numOfCustomFnsApplied","placeholders","fill","raw","Component","displayName","muiName","withConfig"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"ownerState\"],\n  _excluded2 = [\"variants\"],\n  _excluded3 = [\"name\", \"slot\", \"skipVariantsResolver\", \"skipSx\", \"overridesResolver\"];\n/* eslint-disable no-underscore-dangle */\nimport styledEngineStyled, { internal_processStyles as processStyles } from '@mui/styled-engine';\nimport { isPlainObject } from '@mui/utils/deepmerge';\nimport capitalize from '@mui/utils/capitalize';\nimport getDisplayName from '@mui/utils/getDisplayName';\nimport createTheme from './createTheme';\nimport styleFunctionSx from './styleFunctionSx';\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\n// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40\nfunction isStringTag(tag) {\n  return typeof tag === 'string' &&\n  // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96;\n}\n\n// Update /system/styled/#api in case if this changes\nexport function shouldForwardProp(prop) {\n  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n}\nexport const systemDefaultTheme = createTheme();\nconst lowercaseFirstLetter = string => {\n  if (!string) {\n    return string;\n  }\n  return string.charAt(0).toLowerCase() + string.slice(1);\n};\nfunction resolveTheme({\n  defaultTheme,\n  theme,\n  themeId\n}) {\n  return isEmpty(theme) ? defaultTheme : theme[themeId] || theme;\n}\nfunction defaultOverridesResolver(slot) {\n  if (!slot) {\n    return null;\n  }\n  return (props, styles) => styles[slot];\n}\nfunction processStyleArg(callableStyle, _ref) {\n  let {\n      ownerState\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const resolvedStylesArg = typeof callableStyle === 'function' ? callableStyle(_extends({\n    ownerState\n  }, props)) : callableStyle;\n  if (Array.isArray(resolvedStylesArg)) {\n    return resolvedStylesArg.flatMap(resolvedStyle => processStyleArg(resolvedStyle, _extends({\n      ownerState\n    }, props)));\n  }\n  if (!!resolvedStylesArg && typeof resolvedStylesArg === 'object' && Array.isArray(resolvedStylesArg.variants)) {\n    const {\n        variants = []\n      } = resolvedStylesArg,\n      otherStyles = _objectWithoutPropertiesLoose(resolvedStylesArg, _excluded2);\n    let result = otherStyles;\n    variants.forEach(variant => {\n      let isMatch = true;\n      if (typeof variant.props === 'function') {\n        isMatch = variant.props(_extends({\n          ownerState\n        }, props, ownerState));\n      } else {\n        Object.keys(variant.props).forEach(key => {\n          if ((ownerState == null ? void 0 : ownerState[key]) !== variant.props[key] && props[key] !== variant.props[key]) {\n            isMatch = false;\n          }\n        });\n      }\n      if (isMatch) {\n        if (!Array.isArray(result)) {\n          result = [result];\n        }\n        result.push(typeof variant.style === 'function' ? variant.style(_extends({\n          ownerState\n        }, props, ownerState)) : variant.style);\n      }\n    });\n    return result;\n  }\n  return resolvedStylesArg;\n}\nexport default function createStyled(input = {}) {\n  const {\n    themeId,\n    defaultTheme = systemDefaultTheme,\n    rootShouldForwardProp = shouldForwardProp,\n    slotShouldForwardProp = shouldForwardProp\n  } = input;\n  const systemSx = props => {\n    return styleFunctionSx(_extends({}, props, {\n      theme: resolveTheme(_extends({}, props, {\n        defaultTheme,\n        themeId\n      }))\n    }));\n  };\n  systemSx.__mui_systemSx = true;\n  return (tag, inputOptions = {}) => {\n    // Filter out the `sx` style function from the previous styled component to prevent unnecessary styles generated by the composite components.\n    processStyles(tag, styles => styles.filter(style => !(style != null && style.__mui_systemSx)));\n    const {\n        name: componentName,\n        slot: componentSlot,\n        skipVariantsResolver: inputSkipVariantsResolver,\n        skipSx: inputSkipSx,\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot))\n      } = inputOptions,\n      options = _objectWithoutPropertiesLoose(inputOptions, _excluded3);\n\n    // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver :\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;\n    const skipSx = inputSkipSx || false;\n    let label;\n    if (process.env.NODE_ENV !== 'production') {\n      if (componentName) {\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;\n      }\n    }\n    let shouldForwardPropOption = shouldForwardProp;\n\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    if (componentSlot === 'Root' || componentSlot === 'root') {\n      shouldForwardPropOption = rootShouldForwardProp;\n    } else if (componentSlot) {\n      // any other slot specified\n      shouldForwardPropOption = slotShouldForwardProp;\n    } else if (isStringTag(tag)) {\n      // for string (html) tag, preserve the behavior in emotion & styled-components.\n      shouldForwardPropOption = undefined;\n    }\n    const defaultStyledResolver = styledEngineStyled(tag, _extends({\n      shouldForwardProp: shouldForwardPropOption,\n      label\n    }, options));\n    const transformStyleArg = stylesArg => {\n      // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n      // component stays as a function. This condition makes sure that we do not interpolate functions\n      // which are basically components used as a selectors.\n      if (typeof stylesArg === 'function' && stylesArg.__emotion_real !== stylesArg || isPlainObject(stylesArg)) {\n        return props => processStyleArg(stylesArg, _extends({}, props, {\n          theme: resolveTheme({\n            theme: props.theme,\n            defaultTheme,\n            themeId\n          })\n        }));\n      }\n      return stylesArg;\n    };\n    const muiStyledResolver = (styleArg, ...expressions) => {\n      let transformedStyleArg = transformStyleArg(styleArg);\n      const expressionsWithDefaultTheme = expressions ? expressions.map(transformStyleArg) : [];\n      if (componentName && overridesResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          if (!theme.components || !theme.components[componentName] || !theme.components[componentName].styleOverrides) {\n            return null;\n          }\n          const styleOverrides = theme.components[componentName].styleOverrides;\n          const resolvedStyleOverrides = {};\n          // TODO: v7 remove iteration and use `resolveStyleArg(styleOverrides[slot])` directly\n          Object.entries(styleOverrides).forEach(([slotKey, slotStyle]) => {\n            resolvedStyleOverrides[slotKey] = processStyleArg(slotStyle, _extends({}, props, {\n              theme\n            }));\n          });\n          return overridesResolver(props, resolvedStyleOverrides);\n        });\n      }\n      if (componentName && !skipVariantsResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          var _theme$components;\n          const theme = resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          const themeVariants = theme == null || (_theme$components = theme.components) == null || (_theme$components = _theme$components[componentName]) == null ? void 0 : _theme$components.variants;\n          return processStyleArg({\n            variants: themeVariants\n          }, _extends({}, props, {\n            theme\n          }));\n        });\n      }\n      if (!skipSx) {\n        expressionsWithDefaultTheme.push(systemSx);\n      }\n      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;\n      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {\n        const placeholders = new Array(numOfCustomFnsApplied).fill('');\n        // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.\n        transformedStyleArg = [...styleArg, ...placeholders];\n        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];\n      }\n      const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);\n      if (process.env.NODE_ENV !== 'production') {\n        let displayName;\n        if (componentName) {\n          displayName = `${componentName}${capitalize(componentSlot || '')}`;\n        }\n        if (displayName === undefined) {\n          displayName = `Styled(${getDisplayName(tag)})`;\n        }\n        Component.displayName = displayName;\n      }\n      if (tag.muiName) {\n        Component.muiName = tag.muiName;\n      }\n      return Component;\n    };\n    if (defaultStyledResolver.withConfig) {\n      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;\n    }\n    return muiStyledResolver;\n  };\n}"]},"metadata":{},"sourceType":"module"}